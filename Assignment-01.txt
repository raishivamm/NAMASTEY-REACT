Question 1 - What is Emmit? 
          Ans:-Emmet is a plugin or developer tool kit that helps make your work faster
               and substantially enhances HTML and CSS workflows. It comes pre-installed in VS Code 
               and allows you to write your code quickly.

Question 2 - Difference between a Library and Framework?
         Ans:- Library :- 
               A library is a collection of pre-written code that developers can use in their programs to perform specific tasks
               or functions.
               Libraries are typically designed to be reused and provide functionality such as data manipulation,
               mathematical operations, user interface elements, etc.
               Framework:
               A framework, on the other hand, is a more comprehensive software package that provides a structure or skeleton for building an application.
               Frameworks often dictate the overall architecture of an application, 
               providing guidelines on how to organize code and how different components interact.
               Unlike libraries, where developers call upon functions provided by the library, 
               in frameworks, the flow of control is often inverted; the framework calls the developer's code.

Question 3 - What is CDN? Why do we use it?
          Ans:- A content delivery network (CDN) is a network of interconnected servers that speeds up webpage loading for data-heavy applications.
                CDN can stand for content delivery network or content distribution network.
                When a user visits a website, data from that website's server has to travel across the internet to reach the user's computer.
                If the user is located far from that server, it will take a long time to load a large file, such as a video or website image.
                Instead, the website content is stored on CDN servers geographically closer to the users and reaches their computers much faster.

                The primary purpose of a content delivery network (CDN) is to reduce latency, or reduce the delay in communication created by a network's design.
                Because of the global and complex nature of the internet, communication traffic between websites (servers) and their users (clients) has to move over large physical distances.
                The communication is also two-way, with requests going from the client to the server and responses coming back.

Question 4 - Why is React known as React?
          Ans:-React is a JavaScript library for building user interfaces. It is known for its declarative programming style,
               which makes it easy to create complex UIs from small, isolated components.
               React also uses a virtual DOM, which makes it very efficient at updating the UI when data changes.
               React is called "React" because it reacts to changes in data. When data changes, React updates the UI accordingly.
               This makes it easy to create dynamic and interactive UIs.
               React is a very popular JavaScript library, and it is used by many large companies, including Facebook, Google, and Netflix.
               It is also a popular choice for startups and small businesses.

Question 5 - What is crossorigin in script tag?
        Ans:-The crossorigin attribute sets the mode of the request to an HTTP CORS Request.
        Web pages often make requests to load resources on other servers. Here is where CORS comes in.
        A cross-origin request is a request for a resource (e.g. style sheets, iframes, images, fonts, or scripts) from another domain.
        CORS is used to manage cross-origin requests.
        CORS stands for Cross-Origin Resource Sharing, and is a mechanism that allows resources
        on a web page to be requested from another domain outside their own domain.
        It defines a way of how a browser and server can interact to determine whether
        it is safe to allow the cross-origin request. CORS allows servers to specify who can access the assets on the server,
        among many other things.

Question 6 - What is diference between React and ReactDOM
        Ans:-React and ReactDOM are two essential libraries for building web applications with React.
        React provides the tools and concepts for defining component-based user interfaces,
        while ReactDOM handles the task of rendering those interfaces to the DOM.

Question 7 - What is difference between react.development.js and react.production.js files via CDN?
        Ans:-The main difference between react.development.js and react.production.js files is that the development
        file is meant to be used during development, while the production file is meant to be used in production.
        The development file includes a number of features that are helpful for debugging,
        such as detailed error messages and warnings. The production file, on the other hand,
        is optimized for performance and has these features removed.

Question 8 - What is async and defer?
        Ans:-Asynchronous: When we use the async attribute the script is downloaded asynchronously
            with the rest of the page without pausing the HTML parsing and
            the contents of the page are processed and displayed. Once the script is downloaded, the HTML parsing 
            will be paused and the script’s execution will happen. Once the execution is done, HTML parsing will then resume. 
            The page and other scripts don’t wait for async scripts and async scripts also don’t wait for them. 
            It is great for independent scripts and externally located scripts.
            Syntax: <script async src = "script.js"></script>

            Defer:The defer attribute tells the browser not to interfere with the HTML parsing and only to 
            execute the script file once the HTML document has been fully parsed. 
            Whenever a script with this attribute is encountered, the downloading of the script starts asynchronously 
            in the background and when the scripts get downloaded, it is executed only after the HTML parsing is finished.
            Syntax: <script defer src = "script.js"></script>


